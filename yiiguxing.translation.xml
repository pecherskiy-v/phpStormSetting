<application>
  <component name="AppStorage">
    <histories>
      <item value="* The array to work on" />
      <item value="* Changes all keys in an array" />
      <item value="[EA] This condition execution costs less than the previous one." />
      <item value="create Entity List By Array" />
      <item value="create Entity List" />
      <item value="create Form Entity List" />
      <item value="create Form Array Entity List" />
      <item value="create FormArray Entity List" />
      <item value="createFromArrayEntityList" />
      <item value="Thank you!" />
      <item value="Спасибо" />
      <item value="One of the COLUMN_RENAMING_* constants or array for BC reasons (CUSTOM)." />
      <item value="[Semantical Error] line 0, col 81 near '.property p WHERE': Error: Identification Variable Subsidiaries used in join path expression but was not defined before." />
      <item value="Partitions this collection in two collections according to a predicate. * Keys are preserved in the resulting collections." />
      <item value="доступ запрещен" />
      <item value="Access denied" />
      <item value="20:20 External file changes sync may be slow: Project files cannot be watched (are they under network mount?)" />
      <item value="* Determines if the instance is less (before) than another" />
      <item value="* Determines if the instance is greater (after) than another" />
      <item value="* Determines if the instance is equal to another" />
      <item value="* Determines if the instance is not equal to another" />
      <item value="* Determines if the instance is greater (after) than or equal to another" />
      <item value="array intersect" />
      <item value="* Computes the intersection of arrays using keys for comparison" />
      <item value="* Fill an array with values, specifying keys" />
      <item value="* Fill an array with values" />
      <item value="Throwable" />
      <item value="commissions" />
      <item value="not Bind From Legal Entity" />
      <item value="* Quote regular expression characters" />
      <item value="* Split string by a regular expression" />
      <item value="обогащение" />
      <item value="hecking Account" />
      <item value="$subsidiary" />
      <item value="Transformers" />
      <item value="&quot;Message&quot;: &quot;The controller for URI \&quot;\/new\&quot; is not callable: You have requested a non-existent service \&quot;OrderController\&quot;.&quot;," />
      <item value="requires that you provide a value for the &quot;$orderManager&quot; argument. Either the argument is nullable and no null value has been provided, no default value has been provided or because there is a non optional argument after this one." />
      <item value="Namespace prefix must end with a &quot;\&quot;: &quot;\App\Managers&quot;." />
      <item value="Expected to find class &quot;App\Entities\Order&quot; in file &quot;/var/www/mvc/src/app/Entities/Order.php&quot; while importing services from resource &quot;../app/*&quot;, but it was not found! Check the namespace prefix used with the resource." />
      <item value="The file &quot;../src/app&quot; does not exist (in: &quot;/var/www/mvc/src/public/../config&quot;, &quot;/var/www/mvc/src/public&quot;).{&quot;code&quot;:0,&quot;Message&quot;:&quot;Too few arguments to function App\\Http\\Controllers\\OrderController::__construct(), 0 passed in \/var\/www\/mvc\/src\/public\/index.php on line 136 and exactly 1 expected&quot;,&quot;file&quot;:&quot;\/var\/www\/mvc\/src\/app\/Http\/Controllers\/OrderController.php&quot;,&quot;line&quot;:14,&quot;stack&quot;:[{&quot;file&quot;:&quot;\/var\/www\/mvc\/src\/public\/index.php&quot;,&quot;line&quot;:136,&quot;function&quot;:&quot;__construct&quot;,&quot;class&quot;:&quot;App\\Http\\Controllers\\OrderController&quot;,&quot;type&quot;:&quot;-&gt;&quot;,&quot;args&quot;:[]},{&quot;file&quot;:&quot;\/var\/www\/mvc\/vendor\/symfony\/http-kernel\/Controller\/ControllerResolver.php&quot;,&quot;line&quot;:49,&quot;function&quot;:&quot;instantiateController&quot;,&quot;class&quot;:&quot;class@anonymous \/var\/www\/mvc\/src\/public\/index.php0x7fe21ce0a1de&quot;,&quot;type&quot;:&quot;-&gt;&quot;,&quot;args&quot;:[&quot;App\\Http\\Controllers\\OrderController&quot;]},{&quot;file&quot;:&quot;\/var\/www\/mvc\/vendor\/symfony\/http-kernel\/HttpKernel.php&quot;,&quot;line&quot;:140,&quot;function&quot;:&quot;getController&quot;,&quot;class&quot;:&quot;Symfony\\Component\\HttpKernel\\Controller\\ControllerResolver&quot;,&quot;type&quot;:&quot;-&gt;&quot;,&quot;args&quot;:[{&quot;attributes&quot;:{},&quot;request&quot;:{},&quot;query&quot;:{},&quot;server&quot;:{},&quot;files&quot;:{},&quot;cookies&quot;:{},&quot;headers&quot;:{}}]},{&quot;file&quot;:&quot;\/var\/www\/mvc\/vendor\/symfony\/http-kernel\/HttpKernel.php&quot;,&quot;line&quot;:79,&quot;function&quot;:&quot;handleRaw&quot;,&quot;class&quot;:&quot;Symfony\\Component\\HttpKernel\\HttpKernel&quot;,&quot;type&quot;:&quot;-&gt;&quot;,&quot;args&quot;:[{&quot;attributes&quot;:{},&quot;request&quot;:{},&quot;query&quot;:{},&quot;server&quot;:{},&quot;files&quot;:{},&quot;cookies&quot;:{},&quot;headers&quot;:{}},1]},{&quot;file&quot;:&quot;\/var\/www\/mvc\/src\/public\/index.php&quot;,&quot;line&quot;:161,&quot;function&quot;:&quot;handle&quot;,&quot;class&quot;:&quot;Symfony\\Component\\HttpKernel\\HttpKernel&quot;,&quot;type&quot;:&quot;-&gt;&quot;,&quot;args&quot;:[{&quot;attributes&quot;:{},&quot;request&quot;:{},&quot;query&quot;:{},&quot;server&quot;:{},&quot;files&quot;:{},&quot;cookies&quot;:{},&quot;headers&quot;:{}},1,false]}]} " />
      <item value="# this creates a service per class whose id is the fully-qualified class name" />
      <item value="# makes classes in src/ available to be used as services" />
      <item value="&quot;Message&quot;: &quot;You have requested a non-existent service \&quot;App\\Http\\Controllers\\OrderController\&quot;.&quot;," />
      <item value="* Creates a promise for a value if the value is not a promise." />
      <item value="Creates a promise for a value if the value is not a promise." />
      <item value="Введен неверный номер телефона" />
      <item value="ENTERED PHONE NOT CORRECT" />
      <item value="ENTER PHONE NOT CORRECT" />
      <item value="USER PHONE NOT CORRECT" />
      <item value="CORRECT" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="338" />
        <entry key="RUSSIAN" value="338" />
        <entry key="ROMANIAN" value="4" />
        <entry key="SWEDISH" value="1" />
        <entry key="UKRAINIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="targetLanguageSelection" value="PRIMARY_LANGUAGE" />
  </component>
</application>