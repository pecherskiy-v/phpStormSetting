<application>
  <component name="AppStorage">
    <histories>
      <item value="Время жизни счета" />
      <item value="Время жизни сччета" />
      <item value="correspondent account" />
      <item value="корреспондентский счет" />
      <item value="rjhtcgjyltycrbq  счет" />
      <item value="Расчетный счет" />
      <item value="postAdress" />
      <item value="post Adress" />
      <item value="$postAdress" />
      <item value="$post Adress" />
      <item value="position" />
      <item value="Должность" />
      <item value="curator" />
      <item value="Куратора" />
      <item value="Подписант" />
      <item value="лицо с правом подписи" />
      <item value="Occupation" />
      <item value="Род деятельности" />
      <item value="Договор" />
      <item value="Пользователь не найден" />
      <item value="- We also use allure plugin in jenkins to see the tests result" />
      <item value="- The entrypoint file allows to install extra packages in the codeceptjs container" />
      <item value="- The codeceptjs container will remain sleeping till you send a docker exec" />
      <item value="- USER_ID is used to avoid files owned by root, this could cause some problems with jenkins." />
      <item value="Operating on this return mechanism is considered a bad practice. OOP can be used instead." />
      <item value="Bundle" />
      <item value="Composer packages were changed, so excluded folders were updated." />
      <item value="Composer packages were changed, so PHP include paths were updated." />
      <item value="  More than one result was found for query although one row or none was expected.   " />
      <item value="staff" />
      <item value="terminate called after throwing an instance of 'std::runtime_error'   what():  locale::facet::_S_create_c_locale name not valid" />
      <item value="ERROR: Preparation failed: Error response from daemon: OCI runtime create failed: container_linux.go:346: starting container process caused &quot;exec: \&quot;/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Hello129336!@' -Q 'CREATE DATABASE billingpage;'\&quot;: stat /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Hello129336!@' -Q 'CREATE DATABASE billingpage;': no such file or directory&quot;: unknown (executor_docker.go:495:0s) Will be retried in 3s ..." />
      <item value="Failed to remove network for build" />
      <item value="No container found for php72_1 " />
      <item value=" Configuring incomplete, errors occurred!" />
      <item value="Cannot declare class Monolog\Utils, because the name is already in use" />
      <item value="Timer Connection Idle" />
      <item value="Timer ConnectionIdle" />
      <item value="Timer_ConnectionIdle" />
      <item value="Dynamic include expression 'require $path' is not analysed." />
      <item value="EA] 'dirname(__DIR__) . '/'' should be used instead (due to how realpath handles streams)" />
      <item value="php - version 5 or higher" />
      <item value="These are required for running Smart IDReader native # libraries anyway, and for building the wrapping PHP module. # If you are running CentOS 6, the compilers can be installed using devtoolset-2 # (see https://gist.github.com/giwa/b1fb1e44dc0a7d270881). # Don't forget to switch environments using 'scl enable devtoolset-2 bash'." />
      <item value="Configuring incomplete, errors occurred!" />
      <item value="# Version of the PHP module development libraries has to exactly correspond to the version # of the PHP runtime libraries. Thus if the PHP modules built on external SDK build machines # is different from the version used on client's machine, the PHP integration module will not # be operational. The local build will guarantee that the PHP versions match. #" />
      <item value="# REQUIREMENTS: # cmake - version 2.8 or higher. Required for building the PHP module. # gcc/g++ - version 4.8 or higher. These are required for running Smart IDReader native # libraries anyway, and for building the wrapping PHP module. # If you are running CentOS 6, the compilers can be installed using devtoolset-2 # (see https://gist.github.com/giwa/b1fb1e44dc0a7d270881). # Don't forget to switch environments using 'scl enable devtoolset-2 bash'. # php - version 5 or higher # php-dev/php-devel package: module-development libraries should be available, # as well as 'php-config' command. Before running the script please check # that 'php-config' command is available." />
      <item value="# 2. When this script is finished, the compiled module will be placed in ../../bin # directory, and the php bindings will be placed in ../../bindings/php directory. # 3. Check that php.ini contains the extension_dir pointing to the directory with # compiled phpSmartIdEngine.so module and the extension=phpSmartIdEngine to # 4. Check the sample: $ php -c php.ini smartid_sample.php" />
      <item value="# 1. Run this script from its local directory with two parameters - the path to the directory # containing libsmartIdEngine.so installed in your system (&quot;../../bin&quot; if you simply are using # the unpacked SDK) and the path to your php-config binary # (&quot;/usr/bin/php-config&quot; if you are using default configurations). # Keep in mind that the built PHP module will link to the absolute path # to the libsmartIdEngine.so library." />
      <item value="Next, a module build directory is created and the module is built according # to the CMake script provided. Local SWIG build will be used to generate the # wrapper, and $1-st argument of this script will be used to find the # libsmartIdEngine.so library to link with." />
      <item value="First, the script unpacks, configures the sources with a local install prefix, # builds and installs SWIG (not in the system, simply in the local folder). # SWIG sources (exact version v3.0.12 is required) is placed here, it also can # be downloaded from https://downloads.sourceforge.net/project/swig/swig/swig-3.0.12/swig-3.0.12.tar.gz" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="295" />
        <entry key="RUSSIAN" value="297" />
        <entry key="ROMANIAN" value="4" />
        <entry key="SWEDISH" value="1" />
        <entry key="UKRAINIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="targetLanguageSelection" value="PRIMARY_LANGUAGE" />
  </component>
</application>